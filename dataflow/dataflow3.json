{
	"name": "dataflow3",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "RestResource1",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "flatten1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "externalCall1",
					"linkedService": {
						"referenceName": "DiaHabil",
						"type": "LinkedServiceReference"
					}
				}
			],
			"scriptLines": [
				"source(output(",
				"          body as (numeroPagina as boolean, tamanoPagina as short, totalRegistros as short, valores as (activoDesde as string, fechaCreacion as string, fechaModificacion as string, idParametro as string, idVigenciaParametro as string, valor as double, vigenteDesde as string, vigenteHasta as string)[]),",
				"          headers as [string,string]",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     httpMethod: 'GET',",
				"     timeout: 30,",
				"     headers: ['Authorization' -> 'Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6ImEyWm9IcVVBYkU2cHl6enR5RTZka1JGQmVoRTd2RFJERUEyRWloUGVaUWsiLCJ0eXAiOiJKV1QifQ.eyJhdWQiOiI2ZjM1YzU2ZS0yYjY2LTQyNjEtOGU3Yi1hMmMwMTdmZWU2ZjMiLCJpc3MiOiJodHRwczovL2IyY2JpYmNvbXB0cmFuc3NnZGxsLmIyY2xvZ2luLmNvbS9hMTgyNGIzMS1lZDkzLTQ1NGItOTJjYS1mNjE5MzA0ZDg4NmQvdjIuMC8iLCJleHAiOjE3MzMzNDcwMzEsIm5iZiI6MTczMzM0MzQzMSwibmFtZSI6InVua25vd24iLCJ0aWQiOiJhMTgyNGIzMS1lZDkzLTQ1NGItOTJjYS1mNjE5MzA0ZDg4NmQiLCJpc19leHRlcm5hbCI6ZmFsc2UsImF6cGFjciI6IjEiLCJzdWIiOiIyZjMxYmY5Yi02MjY5LTQwNjctYWU5MS1jNzhlMGJiM2Q1OWEiLCJvaWQiOiIyZjMxYmY5Yi02MjY5LTQwNjctYWU5MS1jNzhlMGJiM2Q1OWEiLCJ2ZXIiOiIyLjAiLCJhenAiOiI2ZjM1YzU2ZS0yYjY2LTQyNjEtOGU3Yi1hMmMwMTdmZWU2ZjMiLCJpYXQiOjE3MzMzNDM0MzF9.kT5GezAoP0at2o1fRWCoPHV6hPBpxtCQoUNoayKs2PzFqGKJ6l6GNVE8YLOXJ5hOV8eLdxUpM6iTplv7FpkShKfYKmXiSTlCCa-xRo1O7O3IgDhV8Xjf_uARJD2_JNBUM6GHcV7MG-DU1Cr9nwWCn63HHgYP1-pW4HPOhT8gp2dFqrKI9vzMXIvj1xv5VDp5XJ2HMFUR_1wOctUORTzIqDlnFy_G65F4BV5_l-0f_2lzNnYe5ym00nlWuShK0-ndVpZq4NR6sre1_ZaWKC9VhuEGCT8H6n8rqvTLY4WH4sLaVE_vZikkMDtJW4eh58bgbmk0Pc6dyV8BSe6vY6f5yA'],",
				"     paginationRules: ['supportRFC5988' -> 'true'],",
				"     responseFormat: ['type' -> 'json', 'documentForm' -> 'singleDocument']) ~> source1",
				"source1 foldDown(unroll(body.valores),",
				"     mapColumn(",
				"          valores = body.valores",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"flatten1 derive(ultimo_dia_mes = lastDayOfMonth(toDate(valores.vigenteDesde))) ~> derivedColumn1",
				"derivedColumn1 filter(ultimo_dia_mes == toDate(valores.vigenteDesde) || (ultimo_dia_mes >= toDate(valores.vigenteDesde) && ultimo_dia_mes <= toDate(valores.vigenteHasta))) ~> filter1",
				"filter1 derive(path_url = \"/Festivos/ultimo-dia-habil/CO/{month(ultimo_dia_mes)}/{year(ultimo_dia_mes)}\") ~> derivedColumn2",
				"derivedColumn2 call(mapColumn(",
				"          valores,",
				"          ultimo_dia_mes,",
				"          path_url",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     output(",
				"          ultimoDiaHabil as (ultimoDiaHabil as string)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     format: 'rest',",
				"     store: 'restservice',",
				"     timeout: 30,",
				"     requestInterval: 0,",
				"     httpMethod: 'GET',",
				"     rowRelativeUrl: 'path_url',",
				"     skipRowRelativeUrl: true,",
				"     bodyColumnName: 'ultimoDiaHabil',",
				"     requestFormat: ['type' -> 'json'],",
				"     responseFormat: ['type' -> 'json', 'documentForm' -> 'documentPerLine']) ~> externalCall1",
				"externalCall1 sink(validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: false,",
				"     saveOrder: 1) ~> sink1"
			]
		}
	}
}